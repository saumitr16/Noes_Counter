{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Documents\\\\no counter\\\\client\\\\src\\\\contexts\\\\LivesContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LivesContext = /*#__PURE__*/createContext();\nexport const useLives = () => {\n  _s();\n  const context = useContext(LivesContext);\n  if (!context) {\n    throw new Error('useLives must be used within a LivesProvider');\n  }\n  return context;\n};\n_s(useLives, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const LivesProvider = ({\n  children\n}) => {\n  _s2();\n  const [livesData, setLivesData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [socket, setSocket] = useState(null);\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {\n    if (user) {\n      // Initialize Socket.IO connection\n      const newSocket = io();\n      setSocket(newSocket);\n\n      // Join user's room\n      newSocket.emit('join-room', user.id);\n\n      // Listen for real-time updates\n      newSocket.on('life-request', request => {\n        toast.success(`Life request from ${request.requesterName}: ${request.message}`);\n        fetchLivesData();\n      });\n      newSocket.on('life-used', data => {\n        toast.success('Life used successfully!');\n        fetchLivesData();\n      });\n      newSocket.on('life-denied', data => {\n        toast.error('Life request was denied');\n        fetchLivesData();\n      });\n      newSocket.on('lives-shared', data => {\n        toast.success(`${data.livesShared} lives shared successfully!`);\n        setLivesData(data.livesData);\n      });\n\n      // Fetch initial data\n      fetchLivesData();\n      return () => {\n        newSocket.close();\n      };\n    }\n  }, [user]);\n  const fetchLivesData = async () => {\n    try {\n      const response = await axios.get('/api/lives');\n      setLivesData(response.data);\n    } catch (error) {\n      toast.error('Failed to fetch lives data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const requestLife = async targetUserId => {\n    try {\n      await axios.post('/api/request-life', {\n        targetUserId\n      });\n      toast.success('Life request sent!');\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to request life');\n      return false;\n    }\n  };\n  const approveLife = async requestId => {\n    try {\n      await axios.post('/api/approve-life', {\n        requestId\n      });\n      toast.success('Life approved!');\n      return true;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      toast.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Failed to approve life');\n      return false;\n    }\n  };\n  const denyLife = async requestId => {\n    try {\n      await axios.post('/api/deny-life', {\n        requestId\n      });\n      toast.success('Life request denied');\n      return true;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      toast.error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Failed to deny life');\n      return false;\n    }\n  };\n  const shareLives = async (targetUserId, livesToShare) => {\n    try {\n      await axios.post('/api/share-lives', {\n        targetUserId,\n        livesToShare\n      });\n      toast.success(`${livesToShare} lives shared!`);\n      return true;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      toast.error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Failed to share lives');\n      return false;\n    }\n  };\n  const uploadPhoto = async file => {\n    try {\n      const formData = new FormData();\n      formData.append('photo', file);\n      const response = await axios.post('/api/upload-photo', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data.photoUrl;\n    } catch (error) {\n      toast.error('Failed to upload photo');\n      return null;\n    }\n  };\n  const value = {\n    livesData,\n    loading,\n    requestLife,\n    approveLife,\n    denyLife,\n    shareLives,\n    uploadPhoto,\n    fetchLivesData\n  };\n  return /*#__PURE__*/_jsxDEV(LivesContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s2(LivesProvider, \"8JxjR9uE95S8yO38v2KxAsz/eTQ=\", false, function () {\n  return [useAuth];\n});\n_c = LivesProvider;\nvar _c;\n$RefreshReg$(_c, \"LivesProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","io","axios","toast","useAuth","jsxDEV","_jsxDEV","LivesContext","useLives","_s","context","Error","LivesProvider","children","_s2","livesData","setLivesData","loading","setLoading","socket","setSocket","user","newSocket","emit","id","on","request","success","requesterName","message","fetchLivesData","data","error","livesShared","close","response","get","requestLife","targetUserId","post","_error$response","_error$response$data","approveLife","requestId","_error$response2","_error$response2$data","denyLife","_error$response3","_error$response3$data","shareLives","livesToShare","_error$response4","_error$response4$data","uploadPhoto","file","formData","FormData","append","headers","photoUrl","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Documents/no counter/client/src/contexts/LivesContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\nimport { useAuth } from './AuthContext';\r\n\r\nconst LivesContext = createContext();\r\n\r\nexport const useLives = () => {\r\n  const context = useContext(LivesContext);\r\n  if (!context) {\r\n    throw new Error('useLives must be used within a LivesProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const LivesProvider = ({ children }) => {\r\n  const [livesData, setLivesData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [socket, setSocket] = useState(null);\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      // Initialize Socket.IO connection\r\n      const newSocket = io();\r\n      setSocket(newSocket);\r\n\r\n      // Join user's room\r\n      newSocket.emit('join-room', user.id);\r\n\r\n      // Listen for real-time updates\r\n      newSocket.on('life-request', (request) => {\r\n        toast.success(`Life request from ${request.requesterName}: ${request.message}`);\r\n        fetchLivesData();\r\n      });\r\n\r\n      newSocket.on('life-used', (data) => {\r\n        toast.success('Life used successfully!');\r\n        fetchLivesData();\r\n      });\r\n\r\n      newSocket.on('life-denied', (data) => {\r\n        toast.error('Life request was denied');\r\n        fetchLivesData();\r\n      });\r\n\r\n      newSocket.on('lives-shared', (data) => {\r\n        toast.success(`${data.livesShared} lives shared successfully!`);\r\n        setLivesData(data.livesData);\r\n      });\r\n\r\n      // Fetch initial data\r\n      fetchLivesData();\r\n\r\n      return () => {\r\n        newSocket.close();\r\n      };\r\n    }\r\n  }, [user]);\r\n\r\n  const fetchLivesData = async () => {\r\n    try {\r\n      const response = await axios.get('/api/lives');\r\n      setLivesData(response.data);\r\n    } catch (error) {\r\n      toast.error('Failed to fetch lives data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const requestLife = async (targetUserId) => {\r\n    try {\r\n      await axios.post('/api/request-life', {\r\n        targetUserId\r\n      });\r\n      toast.success('Life request sent!');\r\n      return true;\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.error || 'Failed to request life');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const approveLife = async (requestId) => {\r\n    try {\r\n      await axios.post('/api/approve-life', { requestId });\r\n      toast.success('Life approved!');\r\n      return true;\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.error || 'Failed to approve life');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const denyLife = async (requestId) => {\r\n    try {\r\n      await axios.post('/api/deny-life', { requestId });\r\n      toast.success('Life request denied');\r\n      return true;\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.error || 'Failed to deny life');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const shareLives = async (targetUserId, livesToShare) => {\r\n    try {\r\n      await axios.post('/api/share-lives', {\r\n        targetUserId,\r\n        livesToShare\r\n      });\r\n      toast.success(`${livesToShare} lives shared!`);\r\n      return true;\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.error || 'Failed to share lives');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const uploadPhoto = async (file) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('photo', file);\r\n      \r\n      const response = await axios.post('/api/upload-photo', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      \r\n      return response.data.photoUrl;\r\n    } catch (error) {\r\n      toast.error('Failed to upload photo');\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    livesData,\r\n    loading,\r\n    requestLife,\r\n    approveLife,\r\n    denyLife,\r\n    shareLives,\r\n    uploadPhoto,\r\n    fetchLivesData\r\n  };\r\n\r\n  return (\r\n    <LivesContext.Provider value={value}>\r\n      {children}\r\n    </LivesContext.Provider>\r\n  );\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,iBAAiB;AACnC,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,gBAAGV,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMW,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGZ,UAAU,CAACS,YAAY,CAAC;EACxC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM;IAAEsB;EAAK,CAAC,GAAGjB,OAAO,CAAC,CAAC;EAE1BJ,SAAS,CAAC,MAAM;IACd,IAAIqB,IAAI,EAAE;MACR;MACA,MAAMC,SAAS,GAAGrB,EAAE,CAAC,CAAC;MACtBmB,SAAS,CAACE,SAAS,CAAC;;MAEpB;MACAA,SAAS,CAACC,IAAI,CAAC,WAAW,EAAEF,IAAI,CAACG,EAAE,CAAC;;MAEpC;MACAF,SAAS,CAACG,EAAE,CAAC,cAAc,EAAGC,OAAO,IAAK;QACxCvB,KAAK,CAACwB,OAAO,CAAC,qBAAqBD,OAAO,CAACE,aAAa,KAAKF,OAAO,CAACG,OAAO,EAAE,CAAC;QAC/EC,cAAc,CAAC,CAAC;MAClB,CAAC,CAAC;MAEFR,SAAS,CAACG,EAAE,CAAC,WAAW,EAAGM,IAAI,IAAK;QAClC5B,KAAK,CAACwB,OAAO,CAAC,yBAAyB,CAAC;QACxCG,cAAc,CAAC,CAAC;MAClB,CAAC,CAAC;MAEFR,SAAS,CAACG,EAAE,CAAC,aAAa,EAAGM,IAAI,IAAK;QACpC5B,KAAK,CAAC6B,KAAK,CAAC,yBAAyB,CAAC;QACtCF,cAAc,CAAC,CAAC;MAClB,CAAC,CAAC;MAEFR,SAAS,CAACG,EAAE,CAAC,cAAc,EAAGM,IAAI,IAAK;QACrC5B,KAAK,CAACwB,OAAO,CAAC,GAAGI,IAAI,CAACE,WAAW,6BAA6B,CAAC;QAC/DjB,YAAY,CAACe,IAAI,CAAChB,SAAS,CAAC;MAC9B,CAAC,CAAC;;MAEF;MACAe,cAAc,CAAC,CAAC;MAEhB,OAAO,MAAM;QACXR,SAAS,CAACY,KAAK,CAAC,CAAC;MACnB,CAAC;IACH;EACF,CAAC,EAAE,CAACb,IAAI,CAAC,CAAC;EAEV,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMjC,KAAK,CAACkC,GAAG,CAAC,YAAY,CAAC;MAC9CpB,YAAY,CAACmB,QAAQ,CAACJ,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd7B,KAAK,CAAC6B,KAAK,CAAC,4BAA4B,CAAC;IAC3C,CAAC,SAAS;MACRd,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMmB,WAAW,GAAG,MAAOC,YAAY,IAAK;IAC1C,IAAI;MACF,MAAMpC,KAAK,CAACqC,IAAI,CAAC,mBAAmB,EAAE;QACpCD;MACF,CAAC,CAAC;MACFnC,KAAK,CAACwB,OAAO,CAAC,oBAAoB,CAAC;MACnC,OAAO,IAAI;IACb,CAAC,CAAC,OAAOK,KAAK,EAAE;MAAA,IAAAQ,eAAA,EAAAC,oBAAA;MACdtC,KAAK,CAAC6B,KAAK,CAAC,EAAAQ,eAAA,GAAAR,KAAK,CAACG,QAAQ,cAAAK,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBT,IAAI,cAAAU,oBAAA,uBAApBA,oBAAA,CAAsBT,KAAK,KAAI,wBAAwB,CAAC;MACpE,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMU,WAAW,GAAG,MAAOC,SAAS,IAAK;IACvC,IAAI;MACF,MAAMzC,KAAK,CAACqC,IAAI,CAAC,mBAAmB,EAAE;QAAEI;MAAU,CAAC,CAAC;MACpDxC,KAAK,CAACwB,OAAO,CAAC,gBAAgB,CAAC;MAC/B,OAAO,IAAI;IACb,CAAC,CAAC,OAAOK,KAAK,EAAE;MAAA,IAAAY,gBAAA,EAAAC,qBAAA;MACd1C,KAAK,CAAC6B,KAAK,CAAC,EAAAY,gBAAA,GAAAZ,KAAK,CAACG,QAAQ,cAAAS,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBb,IAAI,cAAAc,qBAAA,uBAApBA,qBAAA,CAAsBb,KAAK,KAAI,wBAAwB,CAAC;MACpE,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMc,QAAQ,GAAG,MAAOH,SAAS,IAAK;IACpC,IAAI;MACF,MAAMzC,KAAK,CAACqC,IAAI,CAAC,gBAAgB,EAAE;QAAEI;MAAU,CAAC,CAAC;MACjDxC,KAAK,CAACwB,OAAO,CAAC,qBAAqB,CAAC;MACpC,OAAO,IAAI;IACb,CAAC,CAAC,OAAOK,KAAK,EAAE;MAAA,IAAAe,gBAAA,EAAAC,qBAAA;MACd7C,KAAK,CAAC6B,KAAK,CAAC,EAAAe,gBAAA,GAAAf,KAAK,CAACG,QAAQ,cAAAY,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBhB,IAAI,cAAAiB,qBAAA,uBAApBA,qBAAA,CAAsBhB,KAAK,KAAI,qBAAqB,CAAC;MACjE,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMiB,UAAU,GAAG,MAAAA,CAAOX,YAAY,EAAEY,YAAY,KAAK;IACvD,IAAI;MACF,MAAMhD,KAAK,CAACqC,IAAI,CAAC,kBAAkB,EAAE;QACnCD,YAAY;QACZY;MACF,CAAC,CAAC;MACF/C,KAAK,CAACwB,OAAO,CAAC,GAAGuB,YAAY,gBAAgB,CAAC;MAC9C,OAAO,IAAI;IACb,CAAC,CAAC,OAAOlB,KAAK,EAAE;MAAA,IAAAmB,gBAAA,EAAAC,qBAAA;MACdjD,KAAK,CAAC6B,KAAK,CAAC,EAAAmB,gBAAA,GAAAnB,KAAK,CAACG,QAAQ,cAAAgB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBpB,IAAI,cAAAqB,qBAAA,uBAApBA,qBAAA,CAAsBpB,KAAK,KAAI,uBAAuB,CAAC;MACnE,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMqB,WAAW,GAAG,MAAOC,IAAI,IAAK;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,IAAI,CAAC;MAE9B,MAAMnB,QAAQ,GAAG,MAAMjC,KAAK,CAACqC,IAAI,CAAC,mBAAmB,EAAEgB,QAAQ,EAAE;QAC/DG,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,OAAOvB,QAAQ,CAACJ,IAAI,CAAC4B,QAAQ;IAC/B,CAAC,CAAC,OAAO3B,KAAK,EAAE;MACd7B,KAAK,CAAC6B,KAAK,CAAC,wBAAwB,CAAC;MACrC,OAAO,IAAI;IACb;EACF,CAAC;EAED,MAAM4B,KAAK,GAAG;IACZ7C,SAAS;IACTE,OAAO;IACPoB,WAAW;IACXK,WAAW;IACXI,QAAQ;IACRG,UAAU;IACVI,WAAW;IACXvB;EACF,CAAC;EAED,oBACExB,OAAA,CAACC,YAAY,CAACsD,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA/C,QAAA,EACjCA;EAAQ;IAAAiD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACnD,GAAA,CA3IWF,aAAa;EAAA,QAIPR,OAAO;AAAA;AAAA8D,EAAA,GAJbtD,aAAa;AAAA,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}