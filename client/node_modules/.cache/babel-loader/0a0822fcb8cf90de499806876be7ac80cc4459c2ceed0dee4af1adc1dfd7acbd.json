{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{io}from'socket.io-client';import axios from'axios';import toast from'react-hot-toast';import{useAuth}from'./AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const LivesContext=/*#__PURE__*/createContext();export const useLives=()=>{const context=useContext(LivesContext);if(!context){throw new Error('useLives must be used within a LivesProvider');}return context;};export const LivesProvider=_ref=>{let{children}=_ref;const[livesData,setLivesData]=useState(null);const[loading,setLoading]=useState(true);const[socket,setSocket]=useState(null);const{user}=useAuth();useEffect(()=>{if(user){// Initialize Socket.IO connection\nconst newSocket=io();setSocket(newSocket);// Join user's room\nnewSocket.emit('join-room',user.id);// Listen for real-time updates\nnewSocket.on('life-request',request=>{toast.success(`Life request from ${request.requesterName}: ${request.message}`);fetchLivesData();});newSocket.on('life-used',data=>{toast.success('Life used successfully!');fetchLivesData();});newSocket.on('life-denied',data=>{toast.error('Life request was denied');fetchLivesData();});newSocket.on('lives-shared',data=>{toast.success(`${data.livesShared} lives shared successfully!`);setLivesData(data.livesData);});// Fetch initial data\nfetchLivesData();return()=>{newSocket.close();};}},[user]);const fetchLivesData=async()=>{try{const response=await axios.get('/api/lives');setLivesData(response.data);}catch(error){toast.error('Failed to fetch lives data');}finally{setLoading(false);}};const requestLife=async targetUserId=>{try{await axios.post('/api/request-life',{targetUserId});toast.success('Life request sent!');return true;}catch(error){var _error$response,_error$response$data;toast.error(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Failed to request life');return false;}};const approveLife=async requestId=>{try{await axios.post('/api/approve-life',{requestId});toast.success('Life approved!');return true;}catch(error){var _error$response2,_error$response2$data;toast.error(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Failed to approve life');return false;}};const denyLife=async requestId=>{try{await axios.post('/api/deny-life',{requestId});toast.success('Life request denied');return true;}catch(error){var _error$response3,_error$response3$data;toast.error(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||'Failed to deny life');return false;}};const shareLives=async(targetUserId,livesToShare)=>{try{await axios.post('/api/share-lives',{targetUserId,livesToShare});toast.success(`${livesToShare} lives shared!`);return true;}catch(error){var _error$response4,_error$response4$data;toast.error(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||'Failed to share lives');return false;}};const uploadPhoto=async file=>{try{const formData=new FormData();formData.append('photo',file);const response=await axios.post('/api/upload-photo',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data.photoUrl;}catch(error){toast.error('Failed to upload photo');return null;}};const value={livesData,loading,requestLife,approveLife,denyLife,shareLives,uploadPhoto,fetchLivesData};return/*#__PURE__*/_jsx(LivesContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","io","axios","toast","useAuth","jsx","_jsx","LivesContext","useLives","context","Error","LivesProvider","_ref","children","livesData","setLivesData","loading","setLoading","socket","setSocket","user","newSocket","emit","id","on","request","success","requesterName","message","fetchLivesData","data","error","livesShared","close","response","get","requestLife","targetUserId","post","_error$response","_error$response$data","approveLife","requestId","_error$response2","_error$response2$data","denyLife","_error$response3","_error$response3$data","shareLives","livesToShare","_error$response4","_error$response4$data","uploadPhoto","file","formData","FormData","append","headers","photoUrl","value","Provider"],"sources":["C:/Users/ADMIN/Documents/no counter/client/src/contexts/LivesContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\nimport { useAuth } from './AuthContext';\r\n\r\nconst LivesContext = createContext();\r\n\r\nexport const useLives = () => {\r\n  const context = useContext(LivesContext);\r\n  if (!context) {\r\n    throw new Error('useLives must be used within a LivesProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const LivesProvider = ({ children }) => {\r\n  const [livesData, setLivesData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [socket, setSocket] = useState(null);\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      // Initialize Socket.IO connection\r\n      const newSocket = io();\r\n      setSocket(newSocket);\r\n\r\n      // Join user's room\r\n      newSocket.emit('join-room', user.id);\r\n\r\n      // Listen for real-time updates\r\n      newSocket.on('life-request', (request) => {\r\n        toast.success(`Life request from ${request.requesterName}: ${request.message}`);\r\n        fetchLivesData();\r\n      });\r\n\r\n      newSocket.on('life-used', (data) => {\r\n        toast.success('Life used successfully!');\r\n        fetchLivesData();\r\n      });\r\n\r\n      newSocket.on('life-denied', (data) => {\r\n        toast.error('Life request was denied');\r\n        fetchLivesData();\r\n      });\r\n\r\n      newSocket.on('lives-shared', (data) => {\r\n        toast.success(`${data.livesShared} lives shared successfully!`);\r\n        setLivesData(data.livesData);\r\n      });\r\n\r\n      // Fetch initial data\r\n      fetchLivesData();\r\n\r\n      return () => {\r\n        newSocket.close();\r\n      };\r\n    }\r\n  }, [user]);\r\n\r\n  const fetchLivesData = async () => {\r\n    try {\r\n      const response = await axios.get('/api/lives');\r\n      setLivesData(response.data);\r\n    } catch (error) {\r\n      toast.error('Failed to fetch lives data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const requestLife = async (targetUserId) => {\r\n    try {\r\n      await axios.post('/api/request-life', {\r\n        targetUserId\r\n      });\r\n      toast.success('Life request sent!');\r\n      return true;\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.error || 'Failed to request life');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const approveLife = async (requestId) => {\r\n    try {\r\n      await axios.post('/api/approve-life', { requestId });\r\n      toast.success('Life approved!');\r\n      return true;\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.error || 'Failed to approve life');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const denyLife = async (requestId) => {\r\n    try {\r\n      await axios.post('/api/deny-life', { requestId });\r\n      toast.success('Life request denied');\r\n      return true;\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.error || 'Failed to deny life');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const shareLives = async (targetUserId, livesToShare) => {\r\n    try {\r\n      await axios.post('/api/share-lives', {\r\n        targetUserId,\r\n        livesToShare\r\n      });\r\n      toast.success(`${livesToShare} lives shared!`);\r\n      return true;\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.error || 'Failed to share lives');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const uploadPhoto = async (file) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('photo', file);\r\n      \r\n      const response = await axios.post('/api/upload-photo', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      \r\n      return response.data.photoUrl;\r\n    } catch (error) {\r\n      toast.error('Failed to upload photo');\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    livesData,\r\n    loading,\r\n    requestLife,\r\n    approveLife,\r\n    denyLife,\r\n    shareLives,\r\n    uploadPhoto,\r\n    fetchLivesData\r\n  };\r\n\r\n  return (\r\n    <LivesContext.Provider value={value}>\r\n      {children}\r\n    </LivesContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}